language: php

services:
    - docker

matrix:
    fast_finish: true
    include:
        - php: 7.4snapshot
          env: LARAVEL='6.*' TESTBENCH='4.*' COMPOSER_FLAGS='--prefer-lowest' DB_CONNECTION='mysql' DB_PORT='3306' DB_USERNAME='username' DB_PASSWORD='password'
        - php: 7.4snapshot
          env: LARAVEL='6.*' TESTBENCH='4.*' COMPOSER_FLAGS='--prefer-lowest' DB_CONNECTION='pgsql' DB_PORT='5432' DB_USERNAME='username' DB_PASSWORD='password'
        - php: 7.4snapshot
          env: LARAVEL='6.*' TESTBENCH='4.*' COMPOSER_FLAGS='--prefer-stable' DB_CONNECTION='mysql' DB_PORT='3306' DB_USERNAME='username' DB_PASSWORD='password'
        - php: 7.4snapshot
          env: LARAVEL='6.*' TESTBENCH='4.*' COMPOSER_FLAGS='--prefer-stable' DB_CONNECTION='pgsql' DB_PORT='5432' DB_USERNAME='username' DB_PASSWORD='password'

sudo: false

before_install:
    - travis_retry composer self-update
    - travis_retry composer require --no-update --no-interaction "illuminate/support:${LARAVEL}" "orchestra/testbench:${TESTBENCH}"
    - sudo service mysql stop
    - docker-compose -f ./tests/docker-compose.yml up -d
    - php tests/wait.php

install:
    - travis_retry composer update ${COMPOSER_FLAGS} --prefer-dist --no-interaction --no-suggest

script:
    - DB_CONNECTION=${DB_CONNECTION} DB_PORT=${DB_PORT} DB_USERNAME=${DB_USERNAME} DB_PASSWORD=${DB_PASSWORD} vendor/bin/phpunit

after_script:
    - docker-compose -f ./tests/docker-compose.yml down
